

services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: floatchat_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-floatchat}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d floatchat"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: floatchat_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: floatchat_frontend
    command: streamlit run frontend/app.py --server.port 8501 --server.address 0.0.0.0
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - backend

  etl:
    build:
      context: .
      dockerfile: docker/etl/Dockerfile
    container_name: floatchat_etl
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      postgres:
        condition: service_healthy
    command: python -m etl.ingest_argovis

volumes:
  postgres_data:
